# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nlp.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nlp.proto',
  package='nlp',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\tnlp.proto\x12\x03nlp\"\x16\n\x06\x43orpus\x12\x0c\n\x04\x62ody\x18\x01 \x01(\t\"\x18\n\x08Question\x12\x0c\n\x04\x62ody\x18\x01 \x01(\t\"\x16\n\x06\x41nswer\x12\x0c\n\x04\x62ody\x18\x01 \x01(\t\"R\n\x12\x41skQuestionRequest\x12\x1b\n\x06\x63orpus\x18\x01 \x01(\x0b\x32\x0b.nlp.Corpus\x12\x1f\n\x08question\x18\x02 \x01(\x0b\x32\r.nlp.Question\"S\n\x13\x41skQuestionResponse\x12\x1b\n\x06\x61nswer\x18\x01 \x01(\x0b\x32\x0b.nlp.Answer\x12\x1f\n\x08question\x18\x02 \x01(\x0b\x32\r.nlp.Question\"T\n\x13\x41skQuestionsRequest\x12\x1b\n\x06\x63orpus\x18\x01 \x01(\x0b\x32\x0b.nlp.Corpus\x12 \n\tquestions\x18\x02 \x03(\x0b\x32\r.nlp.Question\"3\n\x14\x41skQuestionsResponse\x12\x1b\n\x06\x61nswer\x18\x01 \x03(\x0b\x32\x0b.nlp.Answer2\x93\x01\n\nNLPService\x12@\n\x0b\x41skQuestion\x12\x17.nlp.AskQuestionRequest\x1a\x18.nlp.AskQuestionResponse\x12\x43\n\x0c\x41skQuestions\x12\x18.nlp.AskQuestionsRequest\x1a\x19.nlp.AskQuestionsResponseb\x06proto3'
)




_CORPUS = _descriptor.Descriptor(
  name='Corpus',
  full_name='nlp.Corpus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='nlp.Corpus.body', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=40,
)


_QUESTION = _descriptor.Descriptor(
  name='Question',
  full_name='nlp.Question',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='nlp.Question.body', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=66,
)


_ANSWER = _descriptor.Descriptor(
  name='Answer',
  full_name='nlp.Answer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='body', full_name='nlp.Answer.body', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=68,
  serialized_end=90,
)


_ASKQUESTIONREQUEST = _descriptor.Descriptor(
  name='AskQuestionRequest',
  full_name='nlp.AskQuestionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='corpus', full_name='nlp.AskQuestionRequest.corpus', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='question', full_name='nlp.AskQuestionRequest.question', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=174,
)


_ASKQUESTIONRESPONSE = _descriptor.Descriptor(
  name='AskQuestionResponse',
  full_name='nlp.AskQuestionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='answer', full_name='nlp.AskQuestionResponse.answer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='question', full_name='nlp.AskQuestionResponse.question', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=176,
  serialized_end=259,
)


_ASKQUESTIONSREQUEST = _descriptor.Descriptor(
  name='AskQuestionsRequest',
  full_name='nlp.AskQuestionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='corpus', full_name='nlp.AskQuestionsRequest.corpus', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='questions', full_name='nlp.AskQuestionsRequest.questions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=261,
  serialized_end=345,
)


_ASKQUESTIONSRESPONSE = _descriptor.Descriptor(
  name='AskQuestionsResponse',
  full_name='nlp.AskQuestionsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='answer', full_name='nlp.AskQuestionsResponse.answer', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=347,
  serialized_end=398,
)

_ASKQUESTIONREQUEST.fields_by_name['corpus'].message_type = _CORPUS
_ASKQUESTIONREQUEST.fields_by_name['question'].message_type = _QUESTION
_ASKQUESTIONRESPONSE.fields_by_name['answer'].message_type = _ANSWER
_ASKQUESTIONRESPONSE.fields_by_name['question'].message_type = _QUESTION
_ASKQUESTIONSREQUEST.fields_by_name['corpus'].message_type = _CORPUS
_ASKQUESTIONSREQUEST.fields_by_name['questions'].message_type = _QUESTION
_ASKQUESTIONSRESPONSE.fields_by_name['answer'].message_type = _ANSWER
DESCRIPTOR.message_types_by_name['Corpus'] = _CORPUS
DESCRIPTOR.message_types_by_name['Question'] = _QUESTION
DESCRIPTOR.message_types_by_name['Answer'] = _ANSWER
DESCRIPTOR.message_types_by_name['AskQuestionRequest'] = _ASKQUESTIONREQUEST
DESCRIPTOR.message_types_by_name['AskQuestionResponse'] = _ASKQUESTIONRESPONSE
DESCRIPTOR.message_types_by_name['AskQuestionsRequest'] = _ASKQUESTIONSREQUEST
DESCRIPTOR.message_types_by_name['AskQuestionsResponse'] = _ASKQUESTIONSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Corpus = _reflection.GeneratedProtocolMessageType('Corpus', (_message.Message,), {
  'DESCRIPTOR' : _CORPUS,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Corpus)
  })
_sym_db.RegisterMessage(Corpus)

Question = _reflection.GeneratedProtocolMessageType('Question', (_message.Message,), {
  'DESCRIPTOR' : _QUESTION,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Question)
  })
_sym_db.RegisterMessage(Question)

Answer = _reflection.GeneratedProtocolMessageType('Answer', (_message.Message,), {
  'DESCRIPTOR' : _ANSWER,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.Answer)
  })
_sym_db.RegisterMessage(Answer)

AskQuestionRequest = _reflection.GeneratedProtocolMessageType('AskQuestionRequest', (_message.Message,), {
  'DESCRIPTOR' : _ASKQUESTIONREQUEST,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.AskQuestionRequest)
  })
_sym_db.RegisterMessage(AskQuestionRequest)

AskQuestionResponse = _reflection.GeneratedProtocolMessageType('AskQuestionResponse', (_message.Message,), {
  'DESCRIPTOR' : _ASKQUESTIONRESPONSE,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.AskQuestionResponse)
  })
_sym_db.RegisterMessage(AskQuestionResponse)

AskQuestionsRequest = _reflection.GeneratedProtocolMessageType('AskQuestionsRequest', (_message.Message,), {
  'DESCRIPTOR' : _ASKQUESTIONSREQUEST,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.AskQuestionsRequest)
  })
_sym_db.RegisterMessage(AskQuestionsRequest)

AskQuestionsResponse = _reflection.GeneratedProtocolMessageType('AskQuestionsResponse', (_message.Message,), {
  'DESCRIPTOR' : _ASKQUESTIONSRESPONSE,
  '__module__' : 'nlp_pb2'
  # @@protoc_insertion_point(class_scope:nlp.AskQuestionsResponse)
  })
_sym_db.RegisterMessage(AskQuestionsResponse)



_NLPSERVICE = _descriptor.ServiceDescriptor(
  name='NLPService',
  full_name='nlp.NLPService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=401,
  serialized_end=548,
  methods=[
  _descriptor.MethodDescriptor(
    name='AskQuestion',
    full_name='nlp.NLPService.AskQuestion',
    index=0,
    containing_service=None,
    input_type=_ASKQUESTIONREQUEST,
    output_type=_ASKQUESTIONRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AskQuestions',
    full_name='nlp.NLPService.AskQuestions',
    index=1,
    containing_service=None,
    input_type=_ASKQUESTIONSREQUEST,
    output_type=_ASKQUESTIONSRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_NLPSERVICE)

DESCRIPTOR.services_by_name['NLPService'] = _NLPSERVICE

# @@protoc_insertion_point(module_scope)
